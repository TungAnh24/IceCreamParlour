@using PagedList
@using PagedList.Mvc
@using IceCreamParlour.Models
@model IPagedList<IceCreamParlour.Models.Admin>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Local/Views/Shared/_AdminView.cshtml";
}
@{
    Admin admin = new Admin();
    string ob = Convert.ToString(Session["Roles"]);
    int role = int.Parse(ob);
}
<link href="~/Areas/Local/assets/css/PagedList.css" rel="stylesheet" />
<h2>Admin</h2>
<p>
    <a href="@Url.Action("Register", "LoginAdmin")" class="btn btn-outline-reddit">Register Admin</a>
</p>
@using (Html.BeginForm("Index", "Admind", FormMethod.Get))
{
    <p>
        <br />
        Search by Admin's Name:
        @Html.TextBox("Search_Data", ViewBag.FilterValue as string, new { @class = "form-control", @placeholder = "Enter Admin's Name..." })
        <input type="submit" class="btn btn-outline-google" value="Find" />
    </p>
}
<center>
    <input type="text" id="txtSearch" placeholder="Enter Admin Name..." />
    <hr />
    <table class="table table-bordered table-striped">
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.Name)*@
                @Html.ActionLink("Name", "Index", new { Sort_Order = ViewBag.SortName })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Roles)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().IsActive)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.First().IsDelete)
                </th>*@
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @*@Html.DisplayFor(modelItem => item.Roles)*@
                    @if (item.Roles == 1)
                    {
                        <span>SuperAdmin</span>
                    }
                    else
                    {
                        <span>Admin</span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Password)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.IsDelete)
                    </td>*@
                <td>
                    @*<a href="@Url.Action("Edit", "Admins", new { id = item.Admin_Id })" class="btn btn-inverse-warning">Edit</a>*@
                    @*<a href="@Url.Action("Details", "Admins", new { id = item.Admin_Id})" class="btn btn-inverse-secondary">Details</a>*@
                    @if (role == 1)
                    {
                        if (item.IsActive == 0)
                        {
                            if (item.Roles != 1)
                            {
                                <a href="@Url.Action("Lock", "Admins", new { id = item.Admin_Id})" class="btn btn-inverse-danger-muted" onclick="return confirm('Are you sure you wish to lock this admin?');">
                                    Lock
                                </a>}
                            else
                            {
                                <a class="btn btn-primary text-white" onclick="return alert('You dont have permission to perform this function.')">Lock</a>
                            }
                        }
                        else
                        {
                            <a href="@Url.Action("Lock", "Admins", new { id = item.Admin_Id })" class="btn btn-inverse-dark" onclick="return confirm('Are you sure you wish to unlock this admin?');">
                                Unlock
                            </a>
                        }
                    }
                    else
                    {
                        if (item.IsActive == 0)
                        {
                            <a class="btn btn-primary text-white" onclick="return alert('You dont have permission to perform this function.')">Lock</a>
                        }
                        else
                        {
                            <a class="btn btn-primary text-white" onclick="return alert('You dont have permission to perform this function.')">Unlock</a>
                        }
                    }

                    @* Delete *@
                    @if (role == 1)
                    {
                        if (item.Roles != 1)
                        {
                            <a href="@Url.Action("Delete", "Admins", new { id = item.Admin_Id })" class="btn btn-inverse-danger" onclick="return confirm('Are you sure you wish to delete this admin?');">
                                Delete
                            </a>}
                    }
                    else
                    {
                        <a class="btn btn-primary text-white" onclick="return alert('You dont have permission to perform this function.')">Delete</a>
                    }
                </td>
            </tr>
        }

    </table>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        $("#txtSearch").on("keyup", function () {
            var txtEnter = $(this).val();
            $("table tr").each(function (result) {
                if (result !== 0) {
                    var id = $(this).find("td:nth-child(1)").text();
                    //var id = $(this).getElementById().text();
                    if (id.indexOf(txtEnter) !== 0 && id.toLowerCase().indexOf(txtEnter.toLowerCase()) < 0) {
                        $(this).hide();
                    } else {
                        $(this).show();
                    }
                }
            });
        });
    </script>
</center>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, Page_No => Url.Action("Index", new { Page_No, Sort_Order = ViewBag.CurrentSort }))
