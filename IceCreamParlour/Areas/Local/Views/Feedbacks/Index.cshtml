@using PagedList
@using PagedList.Mvc
@model IPagedList<IceCreamParlour.Models.Feedback>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Local/Views/Shared/_AdminView.cshtml";
}
<link href="~/Areas/Local/assets/css/PagedList.css" rel="stylesheet" />

<h2>Customer Feedback</h2>
@using (Html.BeginForm("Index", "Feedbacks", FormMethod.Get))
{
    <p>
        <br />
        Search by Name:
        @Html.TextBox("Search_Data", ViewBag.FilterValue as string
       , new { @class = "form-control", @placeholder = "Enter Feedback Detail...", id= "Formbeg" })
        @*<input type="submit" class="btn btn-outline-google" value="Find" />*@
    </p>
}
<center>
    @*<input type="text" id="txtSearch" placeholder="Enter Feedback Detail..." />*@
    <hr />
    <table class="table table-striped table-bordered">
        <tr>
            <th>
                @Html.ActionLink("Feedback_Detail", "Index", new { Sort_Order = ViewBag.SortName })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Contact)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Email)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.User.Name)
                </th>*@
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FdTrimmed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NameTrimmed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ctTrimmed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailTrimmed)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.User.Name)
                    </td>*@
                <td>
                    @*<a href="@Url.Action("Edit", "Feedbacks", new { id = item.Feedback_id })" class="btn btn-inverse-warning">Edit</a>*@
                    <a href="@Url.Action("Details", "Feedbacks", new { id = item.Feedback_Id })" class="btn btn-inverse-secondary">Details</a>
                    @*<a href="@Url.Action("Delete", "Feedbacks", new { id = item.Feedback_Id })" class="btn btn-inverse-danger" onclick="return confirm('Are you sure you wish to delete this feedback?');">
                            Delete
                        </a>*@
                </td>
            </tr>
        }

    </table>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    @*<script>
            $("#txtSearch").on("keyup", function () {
                var txtEnter = $(this).val();
                $("table tr").each(function (result) {
                    if (result !== 0) {
                        var id = $(this).find("td:nth-child(1)").text();
                        if (id.indexOf(txtEnter) !== 0 && id.toLowerCase().indexOf(txtEnter.toLowerCase()) < 0) {
                            $(this).hide();
                        } else {
                            $(this).show();
                        }
                    }
                });
            });
        </script>*@
    <script type="text/javascript">
        $(document).ready(function () {
            $("#Formbeg").keypress(function (e) {
                keycode = e.keyCode || e.charCode || e.which //for cross browser
                if (keycode == 13)    //keyCode for enter key
                {
                    $("#").click();
                    return false;
                }
            });
        });
    </script>
</center>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, Page_No => Url.Action("Index", new { Page_No, Sort_Order = ViewBag.CurrentSort }))